#include <stdio.h>
#include <stdlib.h>

void input(double **, int);
double HLS0(const double **, int);
void HLS1(const double **, int);
void BH(double **, int, int, double, int);

int main() {
    int c = 0;
    printf("请输入行列式阶数\n");
    scanf("%d", &c);
    double **JZ = (double **)malloc(c * sizeof(double *));
    for (int i = 0; i < c; i++) {
        JZ[i] = (double *)malloc(c * sizeof(double));
    }
    input(JZ, c);
    HLS0(JZ, c);
    for (int i = 0; i < c; i++) {
        free(JZ[i]);
    }
    free(JZ);
    getchar();
    getchar();
}

void input(double **H, int c) {
    printf("本程序按行输入\n");
    for (int j = 0; j < c; j++) {
        printf("正在输入第%d行\n", j + 1);
        for (int i = 0; i < c; i++) {
            //printf("%d:", i + 1);
            scanf("%lf", H[j] + i);
        }
    }
}

void BH(double **H, int a, int b, double JZ, int c) {
    if (JZ == 0.0) {
        double tempRow[c];
        for (int j = 0; j < c; j++) {
            tempRow[j] = H[a][j];
        }
        for (int j = 0; j < c; j++) {
            H[a][j] = H[b][j];
        }
        for (int j = 0; j < c; j++) {
            H[b][j] = tempRow[j];
        }
    } else {
        for (int j = 0; j < c; j++) {
            H[a][j] += H[b][j] * JZ;
        }
    }
}

double HLS0(const double **HLS, int n) {
    double result = 1;
    for (int j = 0; j < n; j++) {
        HLS1(HLS, n - j);
    }
    for (int j = 0; j < n; j++) {
        result *= HLS[j][j];
    }
    printf("%lf", result);
    return result;
}

void HLS1(const double **HLS_M, int v) {
    int j = 0;
    for (j = 0; j < v; j++) {
        if (HLS_M[j][0] != 0.0)
            break;
    }
    if (j == v) return;
    if (j != 0)
        BH(HLS_M, 0, j, 0, v);
    for (int s = 1; s < v; s++) {
        if (HLS_M[s][0] != 0.0)
            BH(HLS_M, s, 0, -HLS_M[s][0] / HLS_M[0][0], v);
    }
